{"version":3,"sources":["components/app-header/header.js","components/app-filter/filter.js","components/app-search/search.js","components/app-to-do-item/app-to-do-item.js","components/app-to-do-list/app-to-do-list.js","components/app-task-add/app-task.add.js","components/app/app.js","serviceWorker.js","index.js"],"names":["Header","props","className","children","Filter","buttons","name","content","map","clazz","filter","type","key","onClick","onFilterSelect","Search","onUpdate","e","row","target","value","setState","onUpdateSearch","state","placeholder","this","onChange","React","Component","ToDoItem","asap","done","tabIndex","onComplete","onKeyPress","task","onProgress","onRemove","xmlns","height","width","fill","d","ToDoList","data","onDelete","onToggleAsap","onToggleDone","elements","item","id","itemProps","AddTask","onValueChange","myRef","current","style","backgroundColor","length","window","screen","onSubmit","preventDefault","classList","add","remove","onAdd","Math","floor","random","createRef","ref","App","initData","JSON","parse","sessionStorage","getItem","useState","setData","setRow","setFilter","useEffect","setItem","stringify","tasks","priority","filteredData","items","filterTask","indexOf","searchTask","newArr","index","findIndex","elem","old","newItem","slice","toggleArr","newTask","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d8bf947.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className=\"header shadow\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nimport \"./filter.css\";\r\n\r\nconst Filter = (props) => {\r\n\tconst btns = [\r\n\t\t{ name: \"all\", content: \"Всі завдання\" },\r\n\t\t{ name: \"priority\", content: \"Першочергові\" },\r\n\t\t{ name: \"complete\", content: \"Виконані\" },\r\n\t];\r\n\r\n\tconst buttons = btns.map(({ name, content }) => {\r\n        const active = props.filter === name;\r\n        const clazz = active ? 'btn-light' : 'btn-outline-light';\r\n\t\treturn (\r\n\t\t\t<button className={`btn ${clazz}`} type=\"button\" key={name}\r\n                    onClick={() => props.onFilterSelect(name)}>\r\n\t\t\t\t{content}\r\n\t\t\t</button>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<div className=\"btn-group mt-3\">\r\n\t\t\t{buttons}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nimport './search.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            row: ''\r\n        }\r\n    }\r\n\r\n    onUpdate = (e) => {\r\n        const row = e.target.value;\r\n        this.setState({row});\r\n        this.props.onUpdateSearch(row);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input\r\n                type='text'\r\n                className='form-control search-input'\r\n                placeholder='Пошук завдання'\r\n                value={this.state.row}\r\n                onChange={this.onUpdate}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\nimport \"./app-to-do-item.css\";\r\n\r\nconst ToDoItem = (props) => {\r\n\tconst { asap, done } = props;\r\n\tlet className = \"list-group-item d-flex justify-content-between\";\r\n\tif (asap) {\r\n\t\tclassName += \" asap\";\r\n\t}\r\n\tif (done) {\r\n\t\tclassName += \" done\";\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className={className}>\r\n\t\t\t<span\r\n\t\t\t\ttabIndex=\"0\"\r\n\t\t\t\tclassName=\"list-group-item-label\"\r\n\t\t\t\tonClick={props.onComplete}\r\n\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\tif (e.key === \"Enter\") {\r\n\t\t\t\t\t\tprops.onComplete();\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t{props.task}\r\n\t\t\t</span>\r\n\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t<button type=\"button\" className=\"btn-star btn-sm \" onClick={props.onProgress}>\r\n\t\t\t\t\t<i className=\"fa-solid fa-star\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"button\" className=\"btn-trash btn-sm \" onClick={props.onRemove}>\r\n\t\t\t\t\t<i className=\"fa-solid fa-trash-can\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40\" width=\"40\" fill=\"transparent\">\r\n\t\t\t\t\t<path d=\"m11.917 30.458-9.625-9.625L4.5 18.625 11.917 26l2.208 2.25Zm7.833-.25-9.625-9.625 2.25-2.25 7.375 7.375L35.5 9.958l2.25 2.25Zm0-8.125-2.25-2.25 9.917-9.875 2.208 2.209Z\" />\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from 'react';\r\nimport ToDoItem from '../app-to-do-item/app-to-do-item';\r\n\r\nimport './app-to-do-list.css';\r\n\r\nconst ToDoList = ({data, onDelete, onToggleAsap, onToggleDone}) => {\r\n\r\n    const elements = data.map(item => {\r\n        const {id, ...itemProps} = item;\r\n        return (\r\n            <ToDoItem\r\n                 key={id}\r\n                 /*task={item.task}*/\r\n                 {...itemProps} // spread\r\n                 onRemove={() => onDelete(id)}\r\n                 onProgress={() => onToggleAsap(id)}\r\n                 onComplete={() => onToggleDone(id)}/> \r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul className=\"app-list list-group shadow\">\r\n           {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport 'animate.css';\r\n\r\nimport \"./app-task-add.css\";\r\n\r\nclass AddTask extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttask: ''\r\n\t\t}\r\n\t\tthis.myRef = React.createRef();\r\n\t}\r\n\t\r\n\r\n\tonValueChange = (e) => {\r\n\t\tif (e.target.value === '') this.myRef.current.style.backgroundColor = '';\r\n\t\telse if (e.target.value.length < 5 || e.target.value.length > 50 || (window.screen.width < 500 && e.target.value.length > 45)) {\r\n\t\t\tthis.myRef.current.style.backgroundColor = '#ff6666';\r\n\t\t} else {\r\n\t\t\tthis.myRef.current.style.backgroundColor = '';\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\ttask: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (this.state.task.length < 5 || this.state.task.length > 50 || (window.screen.width < 500 && this.state.task.length > 45)) {\r\n\t\t\tthis.myRef.current.classList.add('animate__animated', 'animate__shakeX');\r\n\t\t\tthis.myRef.current.style.backgroundColor = '#ff6666';\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tthis.myRef.current.classList.remove('animate__animated', 'animate__shakeX');\r\n\t\t}\r\n\t\tthis.props.onAdd(this.state.task, Math.floor(Math.random() * (1000 - 7) + 7));\r\n\r\n\t\tthis.setState({\r\n\t\t\ttask: ''\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"app-add-form shadow\">\r\n\t\t\t\t<h3>Додати завдання</h3>\r\n\t\t\t\t<form className=\"add-form mt-4 d-flex\" onSubmit={this.onSubmit}>\r\n\t\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\t   ref={this.myRef}\r\n\t\t\t\t\t\t   className=\"form-control new-post-label\"\r\n\t\t\t\t\t\t   placeholder=\"Ти зможеш все :)\"\r\n\t\t\t\t\t\t   value={this.state.task}\r\n\t\t\t\t\t\t   onChange={this.onValueChange} />\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-outline-light\">\r\n\t\t\t\t\t\tДодати\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default AddTask;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Header from '../app-header/header';\r\nimport Filter from '../app-filter/filter';\r\nimport Search from '../app-search/search';\r\nimport ToDoList from '../app-to-do-list/app-to-do-list';\r\nimport AddTask from '../app-task-add/app-task.add';\r\n\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n    const addData = [\r\n        {task: 'створити нову поліфонічну партію', asap: false, done: false, id: 1},\r\n        {task: 'звести паркан навколо будинку', asap: false, done: true, id: 2},\r\n        {task: 'написати про \"без меж\"', asap: false, done: false, id: 3},\r\n        {task: 'знайти нових корисних дурнів в соц.мережах', asap: true, done: false, id: 4},\r\n        {task: 'докупити решту ЗМІ', asap: false, done: false, id: 5},\r\n        {task: 'відпочити на Мальдівах, бо втомився від новин', asap: false, done: false, id: 6}\r\n    ];\r\n    const initData = JSON.parse(sessionStorage.getItem('tasks')) || addData;\r\n\r\n    const [data, setData] = useState(initData);\r\n    const [row, setRow] = useState('');\r\n    const [filter, setFilter] = useState('all');\r\n\r\n    useEffect(() => {\r\n        sessionStorage.setItem('tasks', JSON.stringify(data));\r\n    }, [data])\r\n\r\n\r\n    const deleteTask = id => {\r\n        const newArr = data.filter(item => item.id !== id)\r\n        setData(newArr);\r\n    }\r\n\r\n    const addTask = (task, id) => {\r\n        const newTask = {\r\n            task,\r\n            asap: false,\r\n            done: false,\r\n            id: id\r\n        };\r\n\r\n        setData(data => [...data, newTask]);\r\n    }\r\n\r\n    const onToggleAsap = (id) => {\r\n        const index = data.findIndex(elem => elem.id === id);\r\n        const old = data[index];\r\n        const newItem = {...old, asap: !old.asap};\r\n        const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n\r\n        setData(newArr);\r\n    }\r\n\r\n    const onToggleDone = (id) => {\r\n        const toggleArr = data.map(item => {\r\n            if (item.id === id) {\r\n                return {...item, done: !item.done};\r\n            }\r\n            return item;\r\n        })\r\n      \r\n        setData(toggleArr);\r\n    }\r\n\r\n    const searchTask = (items, row) => {\r\n        if (row.length === 0) return items;\r\n\r\n        return items.filter(item => item.task.indexOf(row) > -1);\r\n    }\r\n\r\n    const onUpdateSearch = (row) => {\r\n        setRow(row);\r\n    }\r\n\r\n    const filterTask = (items, filter) => {\r\n        switch(filter) {\r\n            case 'priority':\r\n                return items.filter(item => {\r\n                    if (item.done) return;\r\n                    return item.asap;\r\n                });\r\n            case 'complete':\r\n                return items.filter(item => item.done);\r\n            default:\r\n                return items;\r\n        }\r\n    }\r\n\r\n    const onFilterSelect = (filter) => {\r\n        setFilter(filter);\r\n    }\r\n\r\n\r\n    const tasks = data.length;\r\n    const priority = data.filter(item => {\r\n        if (item.done) return;\r\n        return item.asap;\r\n    }).length;\r\n    const filteredData = filterTask(searchTask(data, row), filter);\r\n\r\n    return (\r\n        <div className=\"app shadow\">\r\n            <Header>\r\n                <h1>To-Do-List</h1>\r\n                <h2>Кількість завдань: {tasks}</h2>\r\n                <h2>Першочергові завдання: {priority}</h2>\r\n            </Header>\r\n            <div className=\"search shadow\">\r\n                <Search onUpdateSearch={onUpdateSearch}/>\r\n                <Filter filter={filter}\r\n                        onFilterSelect={onFilterSelect}/>\r\n            </div>\r\n           <ToDoList\r\n             data={filteredData}\r\n             onDelete={deleteTask}\r\n             onToggleAsap={onToggleAsap}\r\n             onToggleDone={onToggleDone}/>\r\n            <AddTask onAdd={addTask}/>\r\n        </div>\r\n    ) \r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}